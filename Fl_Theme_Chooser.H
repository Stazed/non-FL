//
// Copyright (C) 2008-2021 Jonathan Moore Liles
// Copyright (C) 2021- Stazed
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//

// generated by Fast Light User Interface Designer (fluid) version 1.0309

#ifndef Fl_Theme_Chooser_H
#define Fl_Theme_Chooser_H
#include <FL/Fl.H>
#include "Fl_Theme.H"
#include <FL/Fl_Button.H>

class Fl_Color_Button : public Fl_Button {
public:
  Fl_Color_Button( int X, int Y, int W, int H, const char *L = 0 ) ;
  int handle( int m );
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Scrollbar.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Light_Button.H>
#include <FL/fl_ask.H>

class Fl_Theme_Chooser : public Fl_Double_Window {
  void _Fl_Theme_Chooser();
public:
  Fl_Theme_Chooser(int X, int Y, int W, int H, const char *L = 0);
  Fl_Theme_Chooser(int W, int H, const char *L = 0);
  Fl_Theme_Chooser();
  Fl_Choice *theme_choice;
private:
  inline void cb_theme_choice_i(Fl_Choice*, void*);
  static void cb_theme_choice(Fl_Choice*, void*);
public:
  Fl_Choice *color_scheme_choice;
private:
  inline void cb_color_scheme_choice_i(Fl_Choice*, void*);
  static void cb_color_scheme_choice(Fl_Choice*, void*);
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
public:
  Fl_Color_Button *background_color_button;
private:
  inline void cb_background_color_button_i(Fl_Color_Button*, void*);
  static void cb_background_color_button(Fl_Color_Button*, void*);
public:
  Fl_Color_Button *background2_color_button;
private:
  inline void cb_background2_color_button_i(Fl_Color_Button*, void*);
  static void cb_background2_color_button(Fl_Color_Button*, void*);
public:
  Fl_Color_Button *foreground_color_button;
private:
  inline void cb_foreground_color_button_i(Fl_Color_Button*, void*);
  static void cb_foreground_color_button(Fl_Color_Button*, void*);
public:
  Fl_Color_Button *selection_color_button;
};
extern "C" { void fl_theme_chooser(); }
#endif
